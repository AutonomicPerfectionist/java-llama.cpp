name: Maven Central Publish
on:
  workflow_dispatch:
  release:
    types: [created]
jobs:
  build-linux-x86-64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          install: true
      - name: Setup build directory
        run: |
          mkdir -p dist
      - name: Build native library
        run: |
          docker build -f dockerfile . -t llamacpp_binary:x86_64 --load
          docker run --platform=amd64 -v $(pwd)/dist:/out llamacpp_binary:x86_64 bash -c "cp src/main/resources/linux-x86-64/*.so /out/"
      - name: Artifact debian x86_64
        uses: actions/upload-artifact@v3
        with:
          name: debian-binary-amd64
          path: dist/*.so

  publish:
    needs: [build-linux-x86-64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - uses: actions/download-artifact@v3
      - name: Copy resources
        run: |
          mv ./debian-binary-amd64/*.so ./src/main/resources/linux-x86-64/libllama.so
      - name: Publish package
        run: mvn --batch-mode -P release deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
