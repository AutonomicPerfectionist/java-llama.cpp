package de.kherud.llama.foreign;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class llama_token_data extends Structure {
	/** token id */
	public int id;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	/** log-odds of the token */
	public float logit;
	public float getLogit() {
		return logit;
	}
	public void setLogit(float logit) {
		this.logit = logit;
	}
	/** probability of the token */
	public float p;
	public float getP() {
		return p;
	}
	public void setP(float p) {
		this.p = p;
	}
	public llama_token_data() {
		super();
	}
	@Override
	protected List<String> getFieldOrder() {
		return Arrays.asList("id", "logit", "p");
	}
	public llama_token_data(int id, float logit, float p) {
		super();
		this.id = id;
		this.logit = logit;
		this.p = p;
	}
	public llama_token_data(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends llama_token_data implements Structure.ByReference {

	}
	public static class ByValue extends llama_token_data implements Structure.ByValue {

	}
}
